package com.dmilut.lesson_04;

public class Main {

    public static void main(String[] args) {
            /*  Арифметические операторы -----------------------------------
             +	Складывает значения по обе стороны от оператора
             -	Вычитает правый операнд из левого операнда
             *	Умножает значения по обе стороны от оператора
             /	Оператор деления делит левый операнд на правый операнд
             %	Делит левый операнд на правый операнд и возвращает остаток
             ++	Инкремент - увеличивает значение операнда на 1
             --	Декремент - уменьшает значение операнда на 1 */

        /*  TODO: 2020-08-05
                1. Создать 2 переменные a и b типа int
                2. Инициализировать переменные любыми значениями
                3. Написать по 2-3 примера с каждым арифметическим оператором в выводом результата в консоль
                Пример:
                int a = 1;
                int b = 2;
                System.out.println(a + b);
                System.out.println(a - b);
                */


        int a=30;
        int b=13;


        int c=a+b, d=a-b, e=a*b, f=a/b, g=a%b, h=a++, i=b--;
        System.out.println(c);
        System.out.println(d);
        System.out.println(e);
        System.out.println(f);
        System.out.println(g);
        System.out.println(h);
        System.out.println(i);

        System.out.println("My answer is:"+'\n'+c+'\n'+d+'\n'+e+'\n'+f+'\n'+g+'\n'+h+'\n'+i+'\n');


        System.out.println("My answer is: "+c);
        System.out.println("My answer is: "+d);
        System.out.println("My answer is: "+e);
        System.out.println("My answer is: "+f);
        System.out.println("My answer is: "+g);
        System.out.println("My answer is: "+h);
        System.out.println("My answer is: "+i);

        System.out.println("My answer is: c, d, e, f, g, h, i");



            /*  Операторы сравнения ---------------------------------------
             ==	Проверяет, равны или нет значения двух операндов, если да, то условие становится истинным
             !=	Проверяет, равны или нет значения двух операндов, если значения не равны, то условие становится истинным
             >	Проверяет, является ли значение левого операнда больше, чем значение правого операнда, если да,
              то условие становится истинным
             <	Проверяет, является ли значение левого операнда меньше, чем значение правого операнда, если да,
              то условие становится истинным
             >=	Проверяет, является ли значение левого операнда больше или равно значению правого операнда, если да,
              то условие становится истинным
             <=	Проверяет, если значение левого операнда меньше или равно значению правого операнда, если да,
              то условие становится истинным
            */

        /*  TODO: 2020-08-05
                1. Создать 2 переменные a и b типа boolean
                2. Инициализировать переменные любыми значениями
                3. Написать по 2-3 примера с каждым арифметическим оператором */

        int y=120;
        int x=12;

        ;

            /*
                Логические операторы ---------------------------------------
                &&	Называется логический оператор «И». Если оба операнда являются не равны нулю,
                 то условие становится истинным
                ||	Называется логический оператор «ИЛИ». Если любой из двух операндов не равен нулю,
                    то условие становится истинным
                !	Называется логический оператор «НЕ». Использование меняет логическое состояние своего операнда.
                    Если условие имеет значение true, то оператор логического «НЕ» будет делать false
            */

             /*
                Операторы присваивания --------------------------------------
                =	Простой оператор присваивания, присваивает значения из правой стороны операндов
                    к левому операнду
                +=	Оператор присваивания «Добавления», он присваивает левому операнду значения правого
                -=	Оператор присваивания «Вычитания», он вычитает из правого операнда левый операнд
                *=	Оператор присваивания «Умножение», он умножает правый операнд на левый операнд
                /=	Оператор присваивания «Деление», он делит левый операнд на правый операнд
                %=	Оператор присваивания «Модуль», он принимает модуль, с помощью двух операндов и присваивает
                    его результат левому операнду
             */


        /*int a = 0;
        for(int i = 0; i < 10; i++) {
            //System.out.println("i = " + i);
            for(int i1 = 0; i1 < 10; i1++) {
               //System.out.println("i1 = " + i1);
                for(int i2 = 0; i2 < 10; i2++) {
                    a = a + 1;
                    System.out.println("a = " + a);
                }
            }
        }
       */


       /* int a = 1;
        int b = 2;
        int c = 0;

        while ( c < 10) {

            c++;
            System.out.println("c = " + c);
        };*/
    }
}
